
print("******************Lua调用C# nil和null比较的相关知识************************")

--往场景对象上添加一个脚本
--如果存在就不加 如果不存在再加
GameObject = CS.UnityEngine.GameObject
Rigidbody = CS.UnityEngine.Rigidbody

local obj = GameObject("测试加脚本")
--得到身上的刚体组件 如果没有 就加 如果有 就不管
local rig = obj:GetComponent(typeof(Rigidbody))
print(rig)
--判断空
--这里是进不去的 因为null不等于nil，没法进行==比较
--[[
if rig == nil then
    rig = obj:AddComponent(typeof(Rigidbody))
end 
print(rig)
]]--

--方法一：通过对象:Equals(niil),这种方法前提是 对象是一个object
--[[
if rig:Equals(nil) then
    rig = obj:AddComponent(typeof(Rigidbody))
end
]]--

--方法二：
--main.lua里写了一个保险的 全局判空函数
--[[
if IsNull(rig) then
    rig = obj:AddComponent(typeof(Rigidbody))
end 
]]--

--方法三
--在C#中为Object写一个拓展判空方法
--使用C#侧的拓展方法
if rig:IsNull() then
    rig = obj:AddComponent(typeof(Rigidbody))
end
print(rig)